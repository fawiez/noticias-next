{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fabri/OneDrive/%C3%81rea%20de%20Trabalho/noticias_next/projeto/src/app/%28public%29/noticias/%5B...id%5D/page.tsx"],"sourcesContent":["export default async function Page({ params }: { params: any}) {\r\n\tconst id = params.id\r\n\r\n\tconst res = await fetch(`https://api.vercel.app/blog/${id}`)\r\n\tconst data = await res.json()\r\n\r\n\treturn <div>\r\n\t\t<h1>Postagem: {data.title}</h1>\r\n\t\t<h3>Categoria: {data.category}</h3>\r\n\t\t</div>\r\n}"],"names":[],"mappings":";;;;;AAAe,eAAe,KAAK,EAAE,MAAM,EAAkB;IAC5D,MAAM,KAAK,OAAO,EAAE;IAEpB,MAAM,MAAM,MAAM,MAAM,CAAC,4BAA4B,EAAE,IAAI;IAC3D,MAAM,OAAO,MAAM,IAAI,IAAI;IAE3B,qBAAO,8OAAC;;0BACP,8OAAC;;oBAAG;oBAAW,KAAK,KAAK;;;;;;;0BACzB,8OAAC;;oBAAG;oBAAY,KAAK,QAAQ;;;;;;;;;;;;;AAE/B"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fabri/OneDrive/%C3%81rea%20de%20Trabalho/noticias_next/projeto/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA6BA,OAAO,MAAMM,eAAe;AAH5B,8BAA8B;AAzB9B,SAASN,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAapBM,WAAWC;AAKb,4DAA4D;;;;;;;;;;;AAC5D,OAAO,MAAMC,cAAc,IAAIX,mBAAmB,uBAAA;IAChDY,MAAAA,MAAY;QACVC,KAAAA;IAAMZ;IAAAA,MAAUa,QAAQ;gBACxBC,IAAAA;YAAAA,CAAM;YAAA;wBACNC,IAAAA;oBAAAA,KAAU;oBAAA;gCACV,IAAA;4BAAA;4BAAA,2BAA2C;wCAC3CC,IAAAA;oCAAAA,OAAY;oCAAA;yCACZC,UAAU;8CACVC,IAAAA,CAAAA,GAAU;wCAAA,CAAE,OAAA;4CAAA,IAAA;4CAAA;yCAAA;;mCACd;;6BACAC,UAAU;sCACRC,IAAAA,CAAAA;4BAAAA;yBAAAA,CAAYnB;;qBACd;wBACF,CAAE,SAAA,CAAA;wBAAA,UAAA;4BAAA,IAAA;4BAAA;yBAAA","ignoreList":[0]}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}